# 命名空间和作用域
# print()
# input()
# list
# tuple

#内置命名空间------Python 解释器
    #就是python解释器已启动就可以使用使用的名字存储在内置命名空间中
    #内置的名字在自动解释器的时候被加载进内存里

#全局命名空间------我们写的代码但是不是函数中的代码
    #是在程序从上到下被执行过程中依次加载进内存的
    #放置了我们设置的所有变量名和函数名

#局部命名空间----函数
    #就是函数内部定义的名字
    #当调用函数的时候们才会产生这个名词空间，随着函数的结束这个命名空间就消失了


#在局部：可以用全局命名空间中的名字，也可以是用内置命名空间中的名字
#在全局：可以使用内置命名空间，不能用局部命名空间
#在内置：不能使用全局和局部的，不依赖这些

# def func():
#     a = 1
# func()#z=执行结束了a就释放了
# print(a)
# 依赖倒置原则，上层模块依赖底层模块，而不能反向依赖

# max([1,1])
#
# def max():
#     print('in max func')

# max()#调用的是我自己定义的函数
# 在正常情况下，直接使用内置的名字
# 当我们在全局定义了和内置名字空间中同名的名字时，会使用全局的名字
# 多个函数应该有多个独立的名字空间

# 作用域，全局作用域和局部作用域
# 全局作用域---内置和全局民资空间中的名字都属于全局作用域
# 局部作用域----作用在局部---函数（）局部名字空间中的名字属于局部作用域
a =1
# def func():
#     global a
#     a += 1#对于不可变数据类型，在局部可以查看但是不能直接更改，如果想要修改需要在程序一开始添加global声明
# func()
# 如果在局部（函数内）声明了一个global变量，那么这个变量在局部内的所有操作将有效

#函数的嵌套定义
def outer():
    a = 1
    def inner():
        print(a)
        print('inner')
    inner()
outer()